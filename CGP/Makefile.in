# $Id: Makefile.in,v 1.15 2003/11/14 17:26:22 markus Exp $

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = @SHELL@

prefix = @prefix@
exec_prefix = @exec_prefix@

top_srcdir =  @top_srcdir@
top_builddir = ..
srcdir = @srcdir@

subdir=CORBA

DESTDIR=

libdir = @libdir@
includedir = @includedir@/CGP

AS = @AS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@

CXXLD = $(CXX)

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs

MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
RELEASE = @RELEASE@
VERSION = @VERSION@

SUBDIRS = . Tests

INCLUDES =  -I. -I$(top_srcdir) -I$(top_srcdir)/YGP
DEFS = @DEFS@
CXXFLAGS = @CXXFLAGS@ -Wall
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)

LDFLAGS = @LDFLAGS@
LIBS=-ldl -lmico -L../YGP -L../YGP/.libs -lYGP -release @LTLIBINTL@ @LIBRELEASE@

LIBTOOL = @LIBTOOL@

# CORBACOMPILE = mico-shc++
# CORBALINK = mico-shld
CORBACOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CORBALINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
LTCORBACOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCORBALINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@


LIB_TARGETS=libCGP.la

IDL_FILES=CDirSrch.idl
DIST_HEADERS=CIDirSrch.h
HEADERS=CDirSrch.h $(IDL_FILES) $(DIST_HEADERS)
OBJECTS=CDirSrch.lo CIDirSrch.lo Version.lo
SOURCES=$(IDL_FILES) CIDirSrch.cpp Version.cpp

TEXINFO=
EXTRA_DIST=

DIST_COMMON = Makefile.in

DISTFILES = $(DIST_COMMON) $(SOURCES) $(DIST_HEADERS) $(TEXINFOS) $(EXTRA_DIST)

all: Makefile $(LIB_TARGETS) all-recursive


# Settings for dependencies
DEP_FILES =  .deps/CIDirSrch.P .deps/CDirSrch.P .deps/Version.P

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)


.SUFFIXES: .cc .cpp .lo .o .idl

.idl.cc:
	idl --boa --no-poa $<

.cpp.o:
	$(CORBACOMPILE) -c $<

.cc.o:
	$(CORBACOMPILE) -c $<

.cpp.lo:
	$(LTCORBACOMPILE) -c $<

.cc.lo:
	$(LTCORBACOMPILE) -c $<

%.o: %.cc
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.o: %.cpp
	$(CORBACOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	$(LTCORBACOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp


%.lo: %.cc
	$(LTCORBACOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp


libCGP.la: $(OBJECTS)
	$(LTCORBALINK) -rpath $(libdir) $(LDFLAGS) $(OBJECTS) $(LIBADD) $(LIBS)

Makefile: Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

uninstall:
	@list='$(LIB_TARGETS)'; for p in $$list; do \
	  if test -f $$p; then \
	    $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	  fi; \
	done
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  rm -f $(DESTDIR)$(includedir)/$$p; \
	done

install: all
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(LIB_TARGETS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  fi; \
	done
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p; \
	done

clean: clean-recursive
	@list='$(LIB_TARGETS)'; for p in $$list; do \
	  if test -f "$$p"; then \
	     rm -f $$p; \
	  fi; \
	done
	rm -f *.o *.lo core *.core;
	@list=$(IDL_FILES); \
	for i in $$list; do \
	   rm -f $${i%.*}.cc $${i%.*}.h; \
	done

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  echo "Checking subdir: " $$subdir; \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done

check: all check-recursive

all-recursive check-recursive clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" != "."; then \
	      (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$target) \
	     	|| case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	  fi; \
	done; \
	test -z "$$fail"

distclean-depend:
	-rm -rf .deps
