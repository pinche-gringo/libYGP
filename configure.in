dnl $Id: configure.in,v 1.46 2003/06/11 18:03:20 markus Rel $
dnl Process this file with autoconf to produce a configure script.

AC_REVISION($Revision: 1.46 $)

AC_INIT()

MAJOR_VERSION=0
MINOR_VERSION=6
MICRO_VERSION=10
RELEASE=$MAJOR_VERSION.$MINOR_VERSION
VERSION=$RELEASE.$MICRO_VERSION
AC_DEFINE_UNQUOTED(LIB_RELEASE, "$RELEASE")
AC_DEFINE_UNQUOTED(SYSTEM, UNIX)
AC_SUBST(VERSION)
AC_SUBST(RELEASE)

LIBRELEASE=0.6
AC_SUBST(LIBRELEASE)

MYSUBDIRS="Common"

GTKMM_NEEDED_MAYOR=2
GTKMM_NEEDED_MINOR=0
GTKMM_NEEDED_MICRO=0
GTKMM_MINVERSION=$GTKMM_NEEDED_MAYOR.$GTKMM_NEEDED_MINOR.$GTKMM_NEEDED_MICRO

dnl AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(General, $VERSION)
AM_CONFIG_HEADER(gzo-cfg.h)

AC_LANG_C
AC_LANG_CPLUSPLUS

AC_C_BIGENDIAN

ALL_LINGUAS="de en es"

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_MAKE_SET

AM_GNU_GETTEXT

dnl Checks for libraries.
AC_CHECK_LIB(stdc++, main)
AC_CHECK_LIB(gmp, main)
AC_CHECK_LIB(pthread, main)

if test -z $HAVE_LIBGMP; then
   LIB_GMP=-lgmp
fi
AC_SUBST(LIB_GMP)

dnl Checks for header files.
dnl AC_CHECK_HEADERS(assert.h errno.h fstream.h iomanip.h iostream.h netinet/in.h)
dnl AC_CHECK_HEADERS(netdb.h stddef.h stdexcept stdio.h streambuf.h streamb.h)
dnl AC_CHECK_HEADERS(string sys/socket.h sys/stat.h sys/types.h syslog.h time.h)

AC_HEADER_DIRENT

AC_MSG_CHECKING(for header regex.h)
AC_CACHE_VAL(ac_cv_header_regex_h, ac_cv_header_regex_h=$ac_cv_header_regex_h)
if test -z $ac_cv_header_regex_h; then
AC_TRY_COMPILE(
   [ #include <sys/types.h>
     #include <regex.h>],
   [],
   [ ac_cv_header_regex_h=yes
     AC_DEFINE(HAVE_REGEX_H)],
   [ ac_cv_header_regex_h=no])
fi
AC_MSG_RESULT([$ac_cv_header_regex_h])
if test "$ac_cv_header_regex_h" != "yes"; then
   AC_CHECK_HEADERS(regexp.h)
fi

if test "$enable_corba" == "yes"; then
   AC_CACHE_CHECK([for header CORBA.h], [ac_cv_header_CORBA_h],
                  [AC_TRY_COMPILE([#include <CORBA.h>], [],
                                  [ac_cv_header_CORBA_h=yes],
                                  [ac_cv_header_CORBA_h=no])])
   if test "$ac_cv_header_CORBA_h" == "yes"; then
      MYSUBDIRS="$MYSUBDIRS CORBA"
   else
      AC_MSG_WARN([CORBA is not installed; subdir CORBA will not be made])
   fi
fi

dnl Check gtkmm version
PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.0.0,
                  [AC_DEFINE(HAVE_GTK, 1)])
PKG_CHECK_MODULES(GTKMM, gtkmm-2.0 >= $GTKMM_MINVERSION,
                  [[MYSUBDIRS="$MYSUBDIRS X-windows"]
                    [GTKMM_LIBS="$GTKMM_LIBS -lgthread"]],
                  [AC_MSG_WARN([Subdir X-windows will not be made])])
AC_SUBST(MYSUBDIRS)
AC_SUBST(GTKMM_CFLAGS)
AC_SUBST(GTKMM_LIBS)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STAT
AC_STRUCT_TM
AC_CHECK_TYPES([ssize_t, socklen_t])

dnl Checks for library functions.
AC_FUNC_FNMATCH
AC_FUNC_CLOSEDIR_VOID

AC_CHECK_FUNCS(timegm strfmon)

AC_MSG_CHECKING(if signal.h defines a SIGBUS)
AC_CACHE_VAL(ac_cv_HAVE_SIGBUS, ac_cv_HAVE_SIGBUS=$ac_HAVE_SIGBUS)
AC_TRY_COMPILE([#include <signal.h>], [signal (SIGBUS, SIG_DFL);],
               [AC_DEFINE(HAVE_SIGBUS) HAVE_SIGBUS=yes])
AC_MSG_RESULT($HAVE_SIGBUS)

dnl Enable special features
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([[[[[--enable-debug[=LEVEL]]]]]],
	                     [Enables additional traces]),
              if test "$enableval" != "no"; then
	      	  test "$enableval" == "yes" && enableval=0
                  CXXFLAGS="-g -O2 -DTRACELEVEL=$enableval";
              else
                  CXXFLAGS="-O2 -UTRACELEVEL"; fi)
AC_ARG_ENABLE(checks,
              AC_HELP_STRING([[[[[--enable-checks[=LEVEL]]]]]],
	                     [Enables additional (internal) checks]),
              if test "$enableval" != "no"; then
	      	  test "$enableval" == "yes" && enableval=0
                  CXXFLAGS="$CXXFLAGS -DCHECK=$enableval";
              else
                  CXXFLAGS="$CXXFLAGS -DNDEBUG -UCHECK"; fi)
AC_ARG_ENABLE(corba,
              AC_HELP_STRING([--enable-corba],
                             [Enables the check for an CORBA-implementation]))

AC_OUTPUT([Makefile Common/Makefile Common/Tests/Makefile X-windows/Makefile  intl/Makefile \
	   m4/Makefile X-windows/Icons/Makefile \
	   CORBA/Makefile po/Makefile.in doc/Makefile CORBA/Tests/Makefile \
	   bin/Makefile X-windows/Samples/Makefile Common/YMP.pc \
	   X-windows/XMP.pc])

dnl Settings for autoheader
AH_TOP([#ifndef GZO_CFG_H
#define GZO_CFG_H

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

// Detect common platforms
#define WINDOWS 0
#define UNIX    1
#if defined(_WIN32)
#  if defined(__CYGWIN__)
#     define SYSTEM UNIX
#  else
#     define SYSTEM WINDOWS
#  endif
#else
#  define SYSTEM UNIX
#endif /* _WIN32 */

/* Define the name of the package */
#ifndef PACKAGE
#undef PACKAGE
#endif

/* Define the version number */
#ifndef VERSION
#undef VERSION
#endif

/* Define the micro-version */
#ifndef LIB_RELEASE
#undef LIB_RELEASE
#endif])

AH_BOTTOM([#endif])
AH_TEMPLATE([HAVE_REGEX_H], [Define for working regex.h])
AH_TEMPLATE([HAVE_REGEXP_H], [Define for working regexp.h])
AH_TEMPLATE([HAVE_SIGBUS], [Define for defined SIGBUS])
AH_TEMPLATE([HAVE_GTK], [Define if GTK is installed (in a fitting version)])
